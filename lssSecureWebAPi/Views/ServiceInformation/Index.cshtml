@model PagedList.IPagedList<lssCore.Database.ServiceInformation>
@using PagedList.Mvc;
@using lssCore.Services;
@{
    ViewBag.Title = "Index";
}

<h3>Service Calls</h3>
<p>
   
    @Html.ActionLink("Create New", "Create")
</p>
Address Id:  @ViewBag.AddressId<br />

@using (Html.BeginForm("Index", "ServiceInformation", FormMethod.Get))
{
    <p>
        Find: @Html.TextBox("SearchString", ViewBag.CurrentFilter as string)
        <input type="submit" value="Search" />
        @Html.Hidden("AddressId",ViewBag.AddressId as string)
    </p>

}


<table class="table">
    <tr>
        <th>
            Action
        </th>
        <th>
            Description
          
        </th>
        <th>
            Price
           
        </th>
        <th>
            Add Ons
           
        <th>
            Service Type
           
        <th>
            Created Date
            
        </th>
        <th>
            Client
            
        </th>
        <th>
            Contract
          
        </th>
        <th>
            Square Feet of Structure
           
        </th>
        <th>
            Loc Description
           
        </th>
        <th>
            GPS
            
        </th>
        <th>
            Comments
            
        </th>
        <th>
            Status
            
        </th>
        <th></th>
    </tr>

@foreach (var item in Model) {
    <tr>
        <td>
            @Html.ActionLink("Schedule", "Index", "ScheduleEvent", new { serviceId = item.ServiceId, addressId=item.AddressId },null)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.ServiceDescription)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Price)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.AddOns)
        </td>
        <td>
            @Utility.GetUDCValue(item.ServiceTypeXRefId)
          
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.CreatedDate)
        </td>
        <td>
           
            @Utility.GetPersonName(item.AddressId)
        </td>
        <td>
            @Utility.GetContract(item.ContractId)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.SquareFeetOfStructure)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.LocationDescription)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.LocationGPS)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Comments)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Status)
        </td>
        <td>
            @Html.ActionLink("Edit", "Edit", new { id=item.ServiceId }) |
            @Html.ActionLink("Details", "Details", new { id=item.ServiceId }) |
            @Html.ActionLink("Delete", "Delete", new { id=item.ServiceId })
        </td>
    </tr>
}

</table>


Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount
@Html.PagedListPager(Model, page => Url.Action("Index",
    new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter }))
<br />
@Html.ActionLink("Back to List", "Index", "People")



